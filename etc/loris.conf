; loris.conf
;
; [run_as]
; user=loris
; group=loris
;
; General Notes: 
; * Loris (i.e. the user running the application) will need rw permissions for 
;   anything directories you configure here
; * For boolean properites, you MUST use 0 for False, 1 for True
; * Logging is configured in loris/log_config.py
; 

[loris.Loris]
tmp_dp=/tmp/loris/tmp
www_dp=/var/www/loris
enable_caching=1
redirect_conneg=1
redirect_base_uri=1
redirect_cannonical_image_request=0
default_format=jpg
cache_dp=/tmp/loris/cache/img

[resolver.Resolver] 
src_img_root=/usr/local/share/images

[img.ImageCache]
cache_links=/tmp/loris/cache/links

[img_info.InfoCache]
cache_dp=/tmp/loris/cache/info

; Transformer Implementations 
;
; All MUST be level 2 compliant.
;
; `transforms.{src_format}` is the naming convention for of these sections. This
; MUST be followed, and {src_format} MUST be one of the extension strings 
; listed in section 4.5: http://www-sul.stanford.edu/iiif/image-api/1.1/#format
;
; Every section requires these options: 
;  * src_format
;  * impl
;  * target_formats
; any other options provided will be automatically be available to the impl in 
; its confg dict.
;
; At least for now, all implementation must be in (or aliased in) the 
; transforms module.
[transforms.jpg]
src_format=jpg
impl=JPG_Transformer
target_formats=jpg,png

[transforms.tif]
src_format=tif
impl=TIF_Transformer
target_formats=jpg,png

[transforms.jp2]
src_format=jp2
impl=JP2_Transformer
target_formats=jpg,png
tmp_dp=/tmp/loris/tmp/jp2
kdu_expand = /usr/local/bin/kdu_expand
kdu_libs = /usr/local/lib
mkfifo = /usr/bin/mkfifo
